{"version":3,"sources":["../es2015/helper.js"],"names":["HTMLheaderName","HTMLheaderRole","HTMLcontactGeneric","HTMLmobile","HTMLemail","HTMLtwitter","HTMLgithub","HTMLblog","HTMLlocation","HTMLbioPic","HTMLwelcomeMsg","HTMLskillsStart","HTMLskills","HTMLworkStart","HTMLworkEmployer","HTMLworkTitle","HTMLworkDates","HTMLworkLocation","HTMLworkDescription","HTMLprojectStart","HTMLprojectTitle","HTMLprojectDates","HTMLprojectDescription","HTMLprojectImage","HTMLschoolStart","HTMLschoolName","HTMLschoolDegree","HTMLschoolDates","HTMLschoolLocation","HTMLschoolMajor","HTMLonlineClasses","HTMLonlineTitle","HTMLonlineSchool","HTMLonlineDates","HTMLonlineURL","internationalizeButton","googleMap","$","document","ready","click","$name","iName","inName","text","html","clickLocations","logClicks","x","y","push","console","log","map","initializeMap","locations","mapOptions","disableDefaultUI","google","maps","Map","querySelector","locationFinder","bio","contacts","location","education","schools","forEach","school","work","jobs","job","createMapMarker","placeData","lat","geometry","lon","lng","name","formatted_address","bounds","window","mapBounds","marker","Marker","position","title","infoWindow","InfoWindow","content","event","addListener","extend","LatLng","fitBounds","setCenter","getCenter","callback","results","status","places","PlacesServiceStatus","OK","pinPoster","service","PlacesService","place","request","query","textSearch","LatLngBounds"],"mappings":"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","file":"helper.js","sourcesContent":["var HTMLheaderName = '<h1 id=\"name\">%data%</h1>';\r\nvar HTMLheaderRole = '<span>%data%</span><hr>';\r\n\r\nvar HTMLcontactGeneric = '<li class=\"flex-item\"><span class=\"orange-text\">%contact%</span><span class=\"white-text\">%data%</span></li>';\r\nvar HTMLmobile = '<li class=\"flex-item\"><span class=\"orange-text\">mobile</span><span class=\"white-text\">%data%</span></li>';\r\nvar HTMLemail = '<li class=\"flex-item\"><span class=\"orange-text\">email</span><span class=\"white-text\">%data%</span></li>';\r\nvar HTMLtwitter = '<li class=\"flex-item\"><span class=\"orange-text\">twitter</span><span class=\"white-text\">%data%</span></li>';\r\nvar HTMLgithub = '<li class=\"flex-item\"><span class=\"orange-text\">github</span><span class=\"white-text\">%data%</span></li>';\r\nvar HTMLblog = '<li class=\"flex-item\"><span class=\"orange-text\">blog</span><span class=\"white-text\">%data%</span></li>';\r\nvar HTMLlocation = '<li class=\"flex-item\"><span class=\"orange-text\">location</span><span class=\"white-text\">%data%</span></li>';\r\n\r\nvar HTMLbioPic = '<img src=\"%data%\" class=\"biopic\">';\r\nvar HTMLwelcomeMsg = '<span class=\"welcome-message\">%data%</span>';\r\n\r\nvar HTMLskillsStart = '<h3 id=\"skills-h3\">Skills at a Glance:</h3><ul id=\"skills\" class=\"flex-column\"></ul>';\r\nvar HTMLskills = '<li class=\"flex-item\"><span class=\"white-text\">%data%</span></li>';\r\n\r\nvar HTMLworkStart = '<div class=\"work-entry\"></div>';\r\nvar HTMLworkEmployer = '<a href=\"#\">%data%';\r\nvar HTMLworkTitle = ' - %data%</a>';\r\nvar HTMLworkDates = '<div class=\"date-text\">%data%</div>';\r\nvar HTMLworkLocation = '<div class=\"location-text\">%data%</div>';\r\nvar HTMLworkDescription = '<p><br>%data%</p>';\r\n\r\nvar HTMLprojectStart = '<div class=\"project-entry\"></div>';\r\nvar HTMLprojectTitle = '<a href=\"#\">%data%</a>';\r\nvar HTMLprojectDates = '<div class=\"date-text\">%data%</div>';\r\nvar HTMLprojectDescription = '<p><br>%data%</p>';\r\nvar HTMLprojectImage = '<img src=\"%data%\">';\r\n\r\nvar HTMLschoolStart = '<div class=\"education-entry\"></div>';\r\nvar HTMLschoolName = '<a href=\"#\">%data%';\r\nvar HTMLschoolDegree = ' -- %data%</a>';\r\nvar HTMLschoolDates = '<div class=\"date-text\">%data%</div>';\r\nvar HTMLschoolLocation = '<div class=\"location-text\">%data%</div>';\r\nvar HTMLschoolMajor = '<em><br>Major: %data%</em>';\r\n\r\nvar HTMLonlineClasses = '<h3>Online Classes</h3>';\r\nvar HTMLonlineTitle = '<a href=\"#\">%data%';\r\nvar HTMLonlineSchool = ' - %data%</a>';\r\nvar HTMLonlineDates = '<div class=\"date-text\">%data%</div>';\r\nvar HTMLonlineURL = '<br><a href=\"#\">%data%</a>';\r\n\r\nvar internationalizeButton = '<button>Internationalize</button>';\r\nvar googleMap = '<div id=\"map\"></div>';\r\n\r\n// Internationalize\r\n$(document).ready(function() {\r\n    $('button').click(function() {\r\n        var $name = $('#name');\r\n        var iName = inName($name.text()) || function(){};\r\n        $name.html(iName);\r\n    });\r\n});\r\n\r\n// Click locations\r\nvar clickLocations = [];\r\n\r\nfunction logClicks(x,y) {\r\n    clickLocations.push(\r\n        {\r\n            x: x,\r\n            y: y\r\n        }\r\n    );\r\n    console.log('x location: ' + x + '; y location: ' + y);\r\n}\r\n\r\n\r\n\r\n// Map\r\nvar map;    // declares a global map variable\r\n\r\n\r\n/*\r\nStart here! initializeMap() is called when page is loaded.\r\n*/\r\nfunction initializeMap() {\r\n\r\n    var locations;\r\n\r\n    var mapOptions = {\r\n        disableDefaultUI: true\r\n    };\r\n\r\n    /*\r\n    For the map to be displayed, the googleMap var must be\r\n    appended to #mapDiv in resumeBuilder.js.\r\n    */\r\n    map = new google.maps.Map(document.querySelector('#map'), mapOptions);\r\n\r\n\r\n    /*\r\n    locationFinder() returns an array of every location string from the JSONs\r\n    written for bio, education, and work.\r\n    */\r\n    function locationFinder() {\r\n\r\n        // initializes an empty array\r\n        var locations = [];\r\n\r\n        // adds the single location property from bio to the locations array\r\n        locations.push(bio.contacts.location);\r\n\r\n        // iterates through school locations and appends each location to\r\n        // the locations array. Note that forEach is used for array iteration\r\n        // as described in the Udacity FEND Style Guide:\r\n        // https://udacity.github.io/frontend-nanodegree-styleguide/javascript.html#for-in-loop\r\n        education.schools.forEach(function(school){\r\n            locations.push(school.location);\r\n        });\r\n\r\n        // iterates through work locations and appends each location to\r\n        // the locations array. Note that forEach is used for array iteration\r\n        // as described in the Udacity FEND Style Guide:\r\n        // https://udacity.github.io/frontend-nanodegree-styleguide/javascript.html#for-in-loop\r\n        work.jobs.forEach(function(job){\r\n            locations.push(job.location);\r\n        });\r\n\r\n        return locations;\r\n    }\r\n\r\n    /*\r\n    createMapMarker(placeData) reads Google Places search results to create map pins.\r\n    placeData is the object returned from search results containing information\r\n    about a single location.\r\n    */\r\n    function createMapMarker(placeData) {\r\n\r\n        // The next lines save location data from the search result object to local variables\r\n        var lat = placeData.geometry.location.lat();  // latitude from the place service\r\n        var lon = placeData.geometry.location.lng();  // longitude from the place service\r\n        var name = placeData.formatted_address;   // name of the place from the place service\r\n        var bounds = window.mapBounds;            // current boundaries of the map window\r\n\r\n        // marker is an object with additional data about the pin for a single location\r\n        var marker = new google.maps.Marker({\r\n            map: map,\r\n            position: placeData.geometry.location,\r\n            title: name\r\n        });\r\n\r\n        // infoWindows are the little helper windows that open when you click\r\n        // or hover over a pin on a map. They usually contain more information\r\n        // about a location.\r\n        var infoWindow = new google.maps.InfoWindow({\r\n            content: name\r\n        });\r\n\r\n        // hmmmm, I wonder what this is about...\r\n        google.maps.event.addListener(marker, 'click', function() {\r\n            // your code goes here!\r\n        });\r\n\r\n        // this is where the pin actually gets added to the map.\r\n        // bounds.extend() takes in a map location object\r\n        bounds.extend(new google.maps.LatLng(lat, lon));\r\n        // fit the map to the new marker\r\n        map.fitBounds(bounds);\r\n        // center the map\r\n        map.setCenter(bounds.getCenter());\r\n    }\r\n\r\n    /*\r\n    callback(results, status) makes sure the search returned results for a location.\r\n    If so, it creates a new map marker for that location.\r\n    */\r\n    function callback(results, status) {\r\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n            createMapMarker(results[0]);\r\n        }\r\n    }\r\n\r\n    /*\r\n    pinPoster(locations) takes in the array of locations created by locationFinder()\r\n    and fires off Google place searches for each location\r\n    */\r\n    function pinPoster(locations) {\r\n\r\n        // creates a Google place search service object. PlacesService does the work of\r\n        // actually searching for location data.\r\n        var service = new google.maps.places.PlacesService(map);\r\n\r\n        // Iterates through the array of locations, creates a search object for each location\r\n            locations.forEach(function(place){\r\n            // the search request object\r\n            var request = {\r\n                query: place\r\n            };\r\n\r\n            // Actually searches the Google Maps API for location data and runs the callback\r\n            // function with the search results after each search.\r\n            service.textSearch(request, callback);\r\n        });\r\n    }\r\n\r\n    // Sets the boundaries of the map based on pin locations\r\n    window.mapBounds = new google.maps.LatLngBounds();\r\n\r\n    // locations is an array of location strings returned from locationFinder()\r\n    locations = locationFinder();\r\n\r\n    // pinPoster(locations) creates pins on the map for each location in\r\n    // the locations array\r\n    pinPoster(locations);\r\n\r\n}\r\n\r\n/*\r\nUncomment the code below when you're ready to implement a Google Map!\r\n*/\r\n\r\n// Calls the initializeMap() function when the page loads\r\n//window.addEventListener('load', initializeMap);\r\n\r\n// Vanilla JS way to listen for resizing of the window\r\n// and adjust map bounds\r\n//window.addEventListener('resize', function(e) {\r\n    //Make sure the map bounds get updated on page resize\r\n//  map.fitBounds(mapBounds);\r\n//});\r\n"]}