{"version":3,"sources":["../es2015/resumeBuilder.js"],"names":["bio","resume","data","education","work","projects","imgDir","responsiveImgs","formatDate","rawDate","shortForm","monthsShort","monthsLong","msg","monthsArray","startMonth","startYear","endMonth","endYear","display","$","prepend","HTMLheaderRole","replace","role","HTMLheaderName","name","contact","contacts","hasOwnProperty","appendContacts","append","HTMLbioPic","biopic","HTMLwelcomeMsg","welcomeMessage","skills","length","HTMLskillsStart","forEach","skill","HTMLskills","jqueryString","prop","HTMLcontactGeneric","jobs","some","importWork","job","index","HTMLworkStart","employer","HTMLworkEmployer","title","HTMLworkTitle","dates","HTMLworkDates","location","HTMLworkLocation","description","HTMLworkDescription","maxJobs","project","HTMLprojectStart","HTMLprojectTitle","HTMLprojectDescription","short","images","url","push","HTMLprojectImage","maxProjectImgs","join","maxProjects","document","click","loc","logClicks","pageX","pageY","internationalizeButton","inName","nameArray","split","toUpperCase","charAt","slice","toLowerCase"],"mappings":"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","file":"resumeBuilder.js","sourcesContent":["/*\r\nAn implementation of this project drawing from a centralized JSON feed would use something like\r\nthe following AJAX call to pull in resume.json data. This project, though, makes use of the\r\n`grunt compileJS` function in the `resume-data` repo, which will output a resume.js file.\r\nresume.js is then directly concatenated into resumeScripts.js file, so it's accessible below.\r\n*/\r\n/*\r\nvar resume = {}\r\nresume.data = (function() {\r\n    var json = null;\r\n    $.ajax({\r\n        'async': false,\r\n        'global': false,\r\n        'url': \"./resume-data/resume.json\",\r\n        'dataType': \"json\",\r\n        'success': function (data) {\r\n            json = data;\r\n        }\r\n    });\r\n    return json;\r\n})();\r\n*/\r\nvar bio = resume.data.bio;\r\nvar education = resume.data.education;\r\nvar work = resume.data.work;\r\nvar projects = resume.data.projects;\r\n\r\nvar imgDir = responsiveImgs ? 'resume-data/img_responsive' : 'resume-data/img';\r\n\r\n// format date from date objects; takes 2 arguments\r\nfunction formatDate(rawDate,shortForm = true) {\r\n    if (rawDate) {\r\n        var monthsShort = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\n        var monthsLong = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        var msg = \"\";\r\n        var monthsArray = shortForm ? monthsShort : monthsLong;\r\n        msg = monthsArray[rawDate.startMonth + 1] + \" \" + rawDate.startYear;\r\n        if (rawDate.startMonth !== rawDate.endMonth && rawDate.startYear !== rawDate.endYear) {\r\n            msg += rawDate.endMonth ? \" - \" + monthsArray[rawDate.endMonth] + \" \" + rawDate.endYear : \"\";\r\n        }\r\n        return msg;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nbio.display = function() {\r\n    $(\"#header\").prepend(HTMLheaderRole.replace(\"%data%\",this.role));\r\n    $(\"#header\").prepend(HTMLheaderName.replace(\"%data%\",this.name));\r\n\r\n    for (var contact in this.contacts) {\r\n        if (this.contacts.hasOwnProperty(contact)) {\r\n            // using bio's appendContacts method, passing in desired element\r\n            // & the prop that should be used (current `contact`)\r\n            this.appendContacts(\"#topContacts\",contact);\r\n            this.appendContacts(\"#footerContacts\",contact);\r\n        }\r\n    }\r\n\r\n    $(\"#header\").append(HTMLbioPic.replace(\"%data%\",this.biopic));\r\n    $(\"#header\").append(HTMLwelcomeMsg.replace(\"%data%\",this.welcomeMessage));\r\n    if (this.skills.length > 0) {\r\n        $(\"#header\").append(HTMLskillsStart);\r\n        bio.skills.forEach(function(skill) {\r\n            $(\"#skills\").append(HTMLskills.replace(\"%data%\",skill));\r\n        });\r\n    }\r\n}\r\n\r\nbio.appendContacts = function(jqueryString,prop) {\r\n    $(jqueryString).append(HTMLcontactGeneric.replace(\"%contact%\",prop).replace(\"%data%\",this.contacts[prop]));\r\n}\r\n\r\nwork.display = function() {\r\n    this.jobs.some(function importWork(job, index) {\r\n        $(\"#workExperience\").append(HTMLworkStart);\r\n        var employer = HTMLworkEmployer.replace(\"%data%\",job.employer);\r\n        var title = HTMLworkTitle.replace(\"%data%\",job.title);\r\n        // only add date if it exists\r\n        var dates = formatDate(job.dates) ? HTMLworkDates.replace(\"%data%\",formatDate(job.dates)) : \"\";\r\n        var location = HTMLworkLocation.replace(\"%data%\",job.location);\r\n        var description = HTMLworkDescription.replace(\"%data%\",job.description);\r\n        $(\".work-entry:last\").append(employer + title + dates + location + description);\r\n        // When the number of jobs that have been appended is equal to the maxJobs set in config.js,\r\n        // the this.jobs.some() method will stop\r\n        return index + 1 >= maxJobs;\r\n    });\r\n}\r\n\r\nprojects.display = function() {\r\n    this.projects.some(function(project, index) {\r\n        $(\"#projects\").append(HTMLprojectStart);\r\n        var title = HTMLprojectTitle.replace(\"%data%\",project.title);\r\n        // Only add date if it exists\r\n        var dates = formatDate(project.dates) ? HTMLworkDates.replace(\"%data%\",formatDate(project.dates)) : \"\";\r\n        // Using the short description for projects\r\n        var description = HTMLprojectDescription.replace(\"%data%\",project.description.short);\r\n        var images = [];\r\n        project.images.some(function(url, index) {\r\n            images.push(HTMLprojectImage.replace(\"%data%\",imgDir + \"/\" + project.imgDir + \"/\" + url));\r\n            return index + 1 >= maxProjectImgs;\r\n        });\r\n        $(\".project-entry:last\").append(title + dates + description + images.join(\"\"));\r\n        // When the number of projects that have been appended is equal to the maxProjects set in config.js,\r\n        // the this.projects.some() method will stop\r\n        return index + 1 >= maxProjects;\r\n    });\r\n}\r\n\r\n\r\nbio.display();\r\nwork.display();\r\nprojects.display();\r\n\r\n\r\n$(document).click(function(loc) {\r\n    logClicks(loc.pageX, loc.pageY);\r\n})\r\n\r\n$(\"#main\").append(internationalizeButton);\r\n\r\nfunction inName(name) {\r\n    var nameArray = name.split(\" \");\r\n    nameArray[1] = nameArray[1].toUpperCase();\r\n    nameArray[0] = nameArray[0].charAt(0).toUpperCase() + nameArray[0].slice(1,nameArray[0].length).toLowerCase();\r\n    return nameArray.join(\" \");\r\n}"]}